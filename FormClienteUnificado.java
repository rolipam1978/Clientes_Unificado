
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author Ramiro
 */
public class FormClienteUnificado extends javax.swing.JFrame {

    MaskFormatter formatoTelefone, formatoCnpj, formatoIE;
    Date data = new Date();
    DateFormat df = DateFormat.getDateInstance(DateFormat.MEDIUM);
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    DefaultTableModel tmClientes = new DefaultTableModel(null, new String[]{"Nome", "Telefone", "Celular", "E-Mail"}) {

        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };
    ListSelectionModel lsmClientes;
    List<ClinteUnificadoBean> clientes;
    ConexaoBD con;
    String tipoRegistro = "";
    String tipo = "PF";
    String sexo = "";
    int navega = 0;

    /**
     * Creates new form FormClienteUnificado
     */
    public FormClienteUnificado() {
        initComponents();
        con = new ConexaoBD();

        con.conecta();
        con.executeSQL("select * from clientes_unificada order by codigo");
        try {
            con.rs.first();
            mostraDados();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Você ainda não possui nenhum Cliente Cadastrado!");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoTipoFornecedor = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisaClinte = new javax.swing.JTextField();
        btBuscaCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        try{
            formatoTelefone = new MaskFormatter("##-####-####");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfTelefone = new JFormattedTextField(formatoTelefone);
        jLabel5 = new javax.swing.JLabel();
        try{
            formatoTelefone = new MaskFormatter("##-####-####");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfCelular = new JFormattedTextField(formatoTelefone);
        jLabel6 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfBairro = new javax.swing.JTextField();
        btAnterior = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btGravar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tfDataCadastro = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfRazaoSocial = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        try{
            formatoCnpj = new MaskFormatter("##.###.###/####-##");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfCnpj = new JFormattedTextField(formatoCnpj);
        jLabel14 = new javax.swing.JLabel();
        try{
            formatoIE = new MaskFormatter("###.###.###");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfIe = new JFormattedTextField(formatoIE);
        jLabel11 = new javax.swing.JLabel();
        try{
            formatoTelefone = new MaskFormatter("##-####-####");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tentar aplicar a Máscara");
        }
        tfFax = new JFormattedTextField(formatoTelefone);
        jLabel15 = new javax.swing.JLabel();
        tfContato = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        tfAniversario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Pesquisar Clientes:");

        tfPesquisaClinte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPesquisaClinteActionPerformed(evt);
            }
        });

        btBuscaCliente.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btBuscaCliente.setText("Buscar");
        btBuscaCliente.setToolTipText("Pesquisar Cliente");
        btBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaClienteActionPerformed(evt);
            }
        });

        tbCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbCliente.setModel(tmClientes);
        tbCliente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmClientes = tbCliente.getSelectionModel();
        lsmClientes.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e){
                if(!e.getValueIsAdjusting()){
                    tbClienteLinhaSelecionada(tbCliente);
                }
            }
        });
        jScrollPane1.setViewportView(tbCliente);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Código:");

        tfCodigo.setEditable(false);
        tfCodigo.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nome:");

        tfNome.setEditable(false);
        tfNome.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Telefone:");

        tfTelefone.setEditable(false);
        tfTelefone.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Celular:");

        tfCelular.setEditable(false);
        tfCelular.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("E-Mail:");

        tfEmail.setEditable(false);
        tfEmail.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Endereço:");

        tfEndereco.setEditable(false);
        tfEndereco.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Bairro:");

        tfBairro.setEditable(false);
        tfBairro.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        btAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/anterior.gif"))); // NOI18N
        btAnterior.setToolTipText("Anterior");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo_registro.gif"))); // NOI18N
        btNovo.setToolTipText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/gravar_registro.gif"))); // NOI18N
        btGravar.setToolTipText("Gravar");
        btGravar.setEnabled(false);
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar_registro.gif"))); // NOI18N
        btAlterar.setToolTipText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/delete.gif"))); // NOI18N
        btExcluir.setToolTipText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Cancelar.gif"))); // NOI18N
        btCancelar.setToolTipText("Cancelar");
        btCancelar.setEnabled(false);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Limpar.gif"))); // NOI18N
        btLimpar.setToolTipText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/próximo.gif"))); // NOI18N
        btProximo.setToolTipText("Próximo");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Data Cadastro:");

        tfDataCadastro.setEditable(false);
        tfDataCadastro.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        tfDataCadastro.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Razão Social:");

        tfRazaoSocial.setEditable(false);
        tfRazaoSocial.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("CNPJ:");

        tfCnpj.setEditable(false);
        tfCnpj.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("I.E.:");

        tfIe.setEditable(false);
        tfIe.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Fax:");

        tfFax.setEditable(false);
        tfFax.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Contato:");

        tfContato.setEditable(false);
        tfContato.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Tipo:");

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione ...", "Pessoa Física", "Pessoa Jurídica" }));
        cbTipo.setEnabled(false);
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Sexo:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione ...", "NA", "Masculino", "Feminino" }));
        cbSexo.setEnabled(false);
        cbSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexoActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Aniversário:");

        tfAniversario.setEditable(false);
        tfAniversario.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btAnterior)
                .addGap(6, 6, 6)
                .addComponent(btNovo)
                .addGap(6, 6, 6)
                .addComponent(btGravar)
                .addGap(6, 6, 6)
                .addComponent(btAlterar)
                .addGap(6, 6, 6)
                .addComponent(btExcluir)
                .addGap(6, 6, 6)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btProximo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel17))
                                    .addGap(4, 4, 4))
                                .addComponent(jLabel15)
                                .addComponent(jLabel13)
                                .addComponent(jLabel6)
                                .addComponent(jLabel2))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(503, 503, 503)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(200, 200, 200)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel14)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(tfIe, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(99, 99, 99)
                                                        .addComponent(jLabel11))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel4)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(31, 31, 31)
                                                        .addComponent(jLabel5)))
                                                .addGap(8, 8, 8)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(tfFax, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(tfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tfAniversario, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tfContato, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfBairro))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(tfPesquisaClinte)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btBuscaCliente))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfCelular, tfFax, tfTelefone});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfPesquisaClinte, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBuscaCliente))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(tfAniversario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(tfIe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(tfFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(tfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAnterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btProximo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btLimpar))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-808)/2, (screenSize.height-627)/2, 808, 627);
    }// </editor-fold>//GEN-END:initComponents

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        tipoRegistro = "";
        limparCampos();
        desabilitarCampos();
        btNovo.setEnabled(true);
        btGravar.setEnabled(false);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        btCancelar.setEnabled(false);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        tipoRegistro = "novo";
        limparCampos();
        habilitarCampos();
        cbTipo.setEnabled(true);
        cbTipo.setSelectedItem("Selecione ...");
        cbTipo.requestFocus();
        btNovo.setEnabled(false);
        btGravar.setEnabled(true);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btCancelar.setEnabled(true);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);
        tfDataCadastro.setText(df.format(data)); // Obtém uma String da Data Atual

    }//GEN-LAST:event_btNovoActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        if (tipoRegistro.equals("novo")) {
            gravaRegistro();
            tipoRegistro = "";
        } else if (tipoRegistro.equals("alteracao")) {
            alteraRegistro();
            tipoRegistro = "";
        }
        desabilitarCampos();
        btNovo.setEnabled(true);
        btGravar.setEnabled(false);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        btCancelar.setEnabled(false);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
    }//GEN-LAST:event_btGravarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        tipoRegistro = "alteracao";
        habilitarCampos();
        cbSexo.setEnabled(true);
        tfNome.requestFocus();
        btNovo.setEnabled(false);
        btGravar.setEnabled(true);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btCancelar.setEnabled(true);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);

    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if (tbCliente.getSelectedRow() != -1) {
            excluiRegistro();

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Cliente da Tabela!");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        navega = 1;
        try {
            con.rs.previous();
            mostraDados();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Localizar o Registro Anterior!");
        }

    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        navega = 2;
        try {
            con.rs.next();
            mostraDados();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Localizar o Próximo Registro!");
        }

    }//GEN-LAST:event_btProximoActionPerformed

    private void btBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaClienteActionPerformed
        buscaRegistro();


    }//GEN-LAST:event_btBuscaClienteActionPerformed

    private void tfPesquisaClinteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPesquisaClinteActionPerformed
        buscaRegistro();

    }//GEN-LAST:event_tfPesquisaClinteActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        if (!tipoRegistro.equals("")) {
            if (cbTipo.getSelectedItem().equals("Pessoa Física")) {
                tipo = "PF";
                tfNome.setEditable(true);
                tfNome.setFocusable(true);
                tfNome.requestFocus();
                cbSexo.setEnabled(true);
                cbSexo.setFocusable(true);
                cbSexo.setSelectedItem("Selecione ...");
                tfAniversario.setEditable(true);
                tfAniversario.setFocusable(true);
                tfRazaoSocial.setEditable(false);
                tfRazaoSocial.setFocusable(false);
                tfCnpj.setEditable(false);
                tfCnpj.setFocusable(false);
                tfIe.setEditable(false);
                tfIe.setFocusable(false);
                tfFax.setEditable(false);
                tfFax.setFocusable(false);
                tfContato.setEditable(false);
                tfContato.setFocusable(false);
            } else if (cbTipo.getSelectedItem().equals("Pessoa Jurídica")) {
                tipo = "PJ";
                tfRazaoSocial.setEditable(true);
                tfRazaoSocial.setFocusable(true);
                tfRazaoSocial.requestFocus();
                cbSexo.setEnabled(true);
                cbSexo.setSelectedItem("NA");
                cbSexo.setEnabled(false);
                cbSexo.setFocusable(false);
                tfAniversario.setEditable(false);
                tfAniversario.setFocusable(false);
                tfCnpj.setEditable(true);
                tfCnpj.setFocusable(true);
                tfIe.setEditable(true);
                tfIe.setFocusable(true);
                tfFax.setEditable(true);
                tfFax.setFocusable(true);
                tfContato.setEditable(true);
                tfContato.setFocusable(true);
            } else if (tipoRegistro.equals("")) {
                desabilitarCampos();
            }
        }
    }//GEN-LAST:event_cbTipoActionPerformed

    private void cbSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexoActionPerformed

        if (cbSexo.getSelectedItem().equals("Masculino")) {
            sexo = "M";
        } else if (cbSexo.getSelectedItem().equals("Feminino")) {
            sexo = "F";
        } else if (cbSexo.getSelectedItem().equals("NA")) {
            sexo = "";
        }

    }//GEN-LAST:event_cbSexoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormClienteUnificado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormClienteUnificado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormClienteUnificado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormClienteUnificado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormClienteUnificado().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btBuscaCliente;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btProximo;
    private javax.swing.JComboBox cbSexo;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.ButtonGroup grupoTipoFornecedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTextField tfAniversario;
    private javax.swing.JTextField tfBairro;
    private javax.swing.JTextField tfCelular;
    private javax.swing.JTextField tfCnpj;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfContato;
    private javax.swing.JTextField tfDataCadastro;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfFax;
    private javax.swing.JTextField tfIe;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfPesquisaClinte;
    private javax.swing.JTextField tfRazaoSocial;
    private javax.swing.JTextField tfTelefone;
    // End of variables declaration//GEN-END:variables

    private void habilitarCampos() {

        tfTelefone.setEditable(true);
        tfCelular.setEditable(true);
        tfEmail.setEditable(true);
        tfEndereco.setEditable(true);
        tfBairro.setEditable(true);
    }

    private void desabilitarCampos() {
        cbTipo.setEnabled(false);
        tfNome.setEditable(false);
        tfTelefone.setEditable(false);
        tfCelular.setEditable(false);
        tfEmail.setEditable(false);
        tfEndereco.setEditable(false);
        tfBairro.setEditable(false);
        cbSexo.setEnabled(false);
        tfAniversario.setEditable(false);
        tfRazaoSocial.setEditable(false);
        tfCnpj.setEditable(false);
        tfIe.setEditable(false);
        tfFax.setEditable(false);
        tfContato.setEditable(false);

    }

    private void limparCampos() {
        tfCodigo.setText("");
        tfRazaoSocial.setText("");
        tfNome.setText("");
        tfCnpj.setText("");
        tfAniversario.setText("");
        tfIe.setText("");
        tfTelefone.setText("");
        tfFax.setText("");
        tfContato.setText("");
        tfCelular.setText("");
        tfEmail.setText("");
        tfEndereco.setText("");
        tfBairro.setText("");
        tfPesquisaClinte.setText("");
        tfDataCadastro.setText("");
    }

    private void gravaRegistro() {
        ClienteUnificadoControl c = new ClienteUnificadoControl();
        ClinteUnificadoBean cliente = new ClinteUnificadoBean();
        if (verificarCampos()) {
            cliente.setRaz_social(tfRazaoSocial.getText().trim());
            cliente.setNome(tfNome.getText().trim());
            cliente.setSexo(sexo);
            cliente.setCnpj(tfCnpj.getText().trim());
            cliente.setInscest(tfIe.getText().trim());
            cliente.setTelefone(tfTelefone.getText().trim());
            cliente.setFax(tfFax.getText().trim());
            cliente.setContato(tfContato.getText().trim());
            cliente.setCelular(tfCelular.getText().trim());
            cliente.setEmail(tfEmail.getText().trim());
            cliente.setEndereco(tfEndereco.getText().trim());
            cliente.setBairro(tfBairro.getText().trim());
            cliente.setDataCadastro(tfDataCadastro.getText().trim());
            cliente.setAniversario(tfAniversario.getText().trim());
            cliente.setTipo(tipo);
            c.gravarRegistro(cliente);
            try {
                con.executeSQL("select * from clientes_unificada order by codigo");
                con.rs.next();
                mostraDados();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Tentar Atualizar os Registros!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite Pelo Menos o Nome");
        }

    }

    private void alteraRegistro() {
        ClienteUnificadoControl c = new ClienteUnificadoControl();
        ClinteUnificadoBean cliente = new ClinteUnificadoBean();
        if (verificarCampos()) {
            cliente.setCodigo(Integer.parseInt(tfCodigo.getText().trim()));
            cliente.setRaz_social(tfRazaoSocial.getText().trim());
            cliente.setNome(tfNome.getText().trim());
            cliente.setAniversario(tfAniversario.getText().trim());
            cliente.setCnpj(tfCnpj.getText().trim());
            cliente.setInscest(tfIe.getText().trim());
            cliente.setTelefone(tfTelefone.getText().trim());
            cliente.setFax(tfFax.getText().trim());
            cliente.setContato(tfContato.getText().trim());
            cliente.setCelular(tfCelular.getText().trim());
            cliente.setEmail(tfEmail.getText().trim());
            cliente.setEndereco(tfEndereco.getText().trim());
            cliente.setBairro(tfBairro.getText().trim());
            cliente.setSexo(sexo);
            c.alterarRegistro(cliente);

            try {
                con.executeSQL("select * from clientes_unificada order by codigo");
                con.rs.next();
                mostraDados();


            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Tentar Alterar o Registro!");
            }
        }
    }

    private void excluiRegistro() {
        try {
            String sql = "select * from clientes_unificada where codigo=" + tfCodigo.getText();
            con.executeSQL(sql);
            con.rs.first();
            String nome = "Deletar Cliente " + con.rs.getString("nome") + "?";
            int opcao = JOptionPane.showConfirmDialog(null, nome, "Deletar Cliente", JOptionPane.YES_NO_OPTION);
            if (opcao == JOptionPane.YES_OPTION) {
                sql = "delete from clientes_unificada where codigo=" + tfCodigo.getText();
                int excluiu = con.stm.executeUpdate(sql);
                if (excluiu == 1) {
                    JOptionPane.showMessageDialog(null, "Registro Excluído com Sucesso!");
                    con.executeSQL("select * from clientes_unificada order by codigo");
                    con.rs.first();
                    mostraDados();
                }
            } else {
                con.executeSQL("select * from clientes_unificada order by codigo");
                con.rs.first();
                mostraDados();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao Tentar Excluir Registro!");
        }
    }

    // Mostra os dados da consulta ao banco de dados nos respectivos Campos
    private void mostraDados() {

        try {

            tfCodigo.setText(con.rs.getString("codigo"));
            tfRazaoSocial.setText(con.rs.getString("razao_social"));
            tfNome.setText(con.rs.getString("nome"));
            tfAniversario.setText(con.rs.getString("aniversario"));
            tfCnpj.setText(con.rs.getString("cnpj"));
            tfIe.setText(con.rs.getString("inscest"));
            tfTelefone.setText(con.rs.getString("telefone"));
            tfFax.setText(con.rs.getString("fax"));
            tfContato.setText(con.rs.getString("contato"));
            tfCelular.setText(con.rs.getString("celular"));
            tfEmail.setText(con.rs.getString("email"));
            tfEndereco.setText(con.rs.getString("endereco"));
            tfBairro.setText(con.rs.getString("bairro"));
            tfDataCadastro.setText(sdf.format(con.rs.getDate("data_cadastro")));

            if (con.rs.getString("tipo").equals("PJ")) {
                cbTipo.setSelectedItem("Pessoa Jurídica");
            } else if (con.rs.getString("tipo").equals("PF")) {
                cbTipo.setSelectedItem("Pessoa Física");
            }

            if (con.rs.getString("sexo").equals("M")) {
                cbSexo.setSelectedItem("Masculino");
            } else if (con.rs.getString("sexo").equals("F")) {
                cbSexo.setSelectedItem("Feminino");
            } else //if (con.rs.getString("sexo").equals("")) {
                cbSexo.setSelectedItem("NA");
            //}

        } catch (Exception e) {

            if (navega == 1) {
                JOptionPane.showMessageDialog(null, "Você já Está no Primeiro Registro");
            } else if (navega == 2) {
                JOptionPane.showMessageDialog(null, "Você já está no Último Registro");
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum Registro Localizado!");
            }
            navega = 0;
        }
    }

    // Verifica se o Campo Nome (Obrigatório) não está Nulo
    private boolean verificarCampos() {
        if (!tfNome.getText().trim().equals("")) {
            return true;
        }
        return false;
    }

    // Consulta os Registros de Clientes no Banco de Dados
    private void buscaRegistro() {
        ClienteUnificadoControl cli = new ClienteUnificadoControl();
        clientes = cli.listarClientes("%" + tfPesquisaClinte.getText().trim() + "%");
        mostrarClientes(clientes);


    }

    // Mostra os Registros de Fornecedores na Tabela
    private void mostrarClientes(List<ClinteUnificadoBean> clientes) {
        while (tmClientes.getRowCount() > 0) {
            tmClientes.removeRow(0);
        }

        if (clientes.size() == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum Cliente Encontrado!");
        } else {
        }
        String[] campos = new String[]{null, null, null, null};
        for (int i = 0; i < clientes.size(); i++) {

            tmClientes.addRow(campos);
            tmClientes.setValueAt(clientes.get(i).getNome(), i, 0);
            tmClientes.setValueAt(clientes.get(i).getTelefone(), i, 1);
            tmClientes.setValueAt(clientes.get(i).getCelular(), i, 2);
            tmClientes.setValueAt(clientes.get(i).getEmail(), i, 3);
        }
    }

    // Carrega os Dados do Fornecedor Selecionado na Tabela nos Respectivos Campos
    private void tbClienteLinhaSelecionada(JTable tb) {

        if (tb.getSelectedRow() != -1) {
            tfCodigo.setText("" + clientes.get(tb.getSelectedRow()).getCodigo());
            tfRazaoSocial.setText(clientes.get(tb.getSelectedRow()).getRaz_social());
            tfNome.setText(clientes.get(tb.getSelectedRow()).getNome());
            tfAniversario.setText(clientes.get(tb.getSelectedRow()).getAniversario());
            tfCnpj.setText(clientes.get(tb.getSelectedRow()).getCnpj());
            tfIe.setText(clientes.get(tb.getSelectedRow()).getInscest());
            tfTelefone.setText(clientes.get(tb.getSelectedRow()).getTelefone());
            tfFax.setText(clientes.get(tb.getSelectedRow()).getFax());
            tfContato.setText(clientes.get(tb.getSelectedRow()).getContato());
            tfCelular.setText(clientes.get(tb.getSelectedRow()).getCelular());
            tfEmail.setText(clientes.get(tb.getSelectedRow()).getEmail());
            tfEndereco.setText(clientes.get(tb.getSelectedRow()).getEndereco());
            tfBairro.setText(clientes.get(tb.getSelectedRow()).getBairro());
            tfDataCadastro.setText(clientes.get(tb.getSelectedRow()).getDataCadastro());

            if (clientes.get(tb.getSelectedRow()).getSexo().equals("M")) {
                cbSexo.setSelectedItem("Masculino");
            } else if (clientes.get(tb.getSelectedRow()).getSexo().equals("F")) {
                cbSexo.setSelectedItem("Feminino");
            } else //if (clientes.get(tb.getSelectedRow()).getSexo().equals("")) {
                cbSexo.setSelectedItem("NA");
            //}
            
            if (clientes.get(tb.getSelectedRow()).getTipo().equals("PJ")) {
                cbTipo.setSelectedItem("Pessoa Jurídica");
            } else if (clientes.get(tb.getSelectedRow()).getTipo().equals("PF")) {
                cbTipo.setSelectedItem("Pessoa Física");
            }

        }

    }
}
